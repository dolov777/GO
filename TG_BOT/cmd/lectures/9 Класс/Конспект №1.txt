Дата проведения урока: 
Тема урока: Одномерные массивы

Что такое одномерный массив?

Одномерный массив (или просто "массив") — это упорядоченная коллекция элементов одного типа данных, хранящихся в памяти последовательно. Представьте себе ряд ячеек, в каждой из которых лежит одно значение (число, символ, строка и т.д.).

Основные характеристики одномерного массива:

* Тип данных: Все элементы массива должны быть одного типа (например, только целые числа int, только вещественные числа float, только символы char и т.д.).
* Размер (длина): Количество элементов в массиве. Размер обычно задается при создании массива и может быть фиксированным или динамически изменяемым (в зависимости от языка программирования).
* Индексация: Каждый элемент массива имеет свой уникальный индекс, который используется для доступа к этому элементу. Обычно индексация начинается с 0 (первый элемент имеет индекс 0, второй – 1 и так далее).

Примеры использования одномерных массивов:

* Хранение списка чисел: [10, 20, 30, 40, 50]
* Хранение набора символов (строк): ['H', 'e', 'l', 'l', 'o']
* Хранение результатов измерений: [23.5, 24.1, 22.8, 25.0]
* Реализация очередей и стеков: Одномерные массивы могут служить основой для реализации этих структур данных.

Операции над одномерными массивами:

Основные операции, которые вы будете выполнять с массивами:

* Создание массива (объявление): Задание размера массива и типа данных.
* Инициализация массива: Присвоение начальных значений элементам массива.
* Доступ к элементам: Чтение или изменение значений отдельных элементов по индексу.
* Перебор массива (итерация): Обход всех элементов массива, чтобы выполнить с ними какие-либо действия.
* Сортировка массива: Расположение элементов в определенном порядке (например, по возрастанию или убыванию).
* Поиск элементов: Определение, есть ли в массиве элемент с заданным значением.
* Добавление и удаление элементов: В массивах с фиксированным размером добавление и удаление обычно не производятся напрямую, но возможны операции создания нового массива с добавленным или удаленным элементом. В массивах с динамическим размером эти операции поддерживаются.

Пример на Python (один из популярных языков программирования):
# Создание массива целых чисел
numbers = [10, 25, 7, 15, 30]

# Доступ к элементам
print(numbers[0])  # Выведет 10 (первый элемент)
print(numbers[2])  # Выведет 7 (третий элемент)

# Изменение элемента
numbers[1] = 35 

# Перебор массива
for number in numbers:
  print(number)

# Вывод длины массива
print(len(numbers))  # Выведет 5


Основные идеи, которые нужно усвоить:

* Последовательность: Элементы в массиве располагаются последовательно в памяти, что обеспечивает быстрый доступ к ним по индексу.
* Индексация: Понимание, что индексы начинаются с 0, очень важно для правильной работы с массивами.
* Тип данных: Все элементы массива должны быть одного типа.
* Итерация: Умение перебирать элементы массива для их обработки – ключевой навык.

Какие вопросы у вас есть по одномерным массивам?

Например, вы можете спросить:

* Как создать массив в конкретном языке программирования?
* Как получить длину массива?
* Какие существуют алгоритмы для сортировки и поиска в массиве?
* Как использовать массивы для решения конкретных задач?
* Какие есть особенности работы с массивами в разных языках?