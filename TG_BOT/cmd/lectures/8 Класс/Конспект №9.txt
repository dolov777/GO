Дата проведения урока: 2.04.2025
Тема урока: Цикл с условием

Циклы с условием (или условные циклы) — это конструкции в программировании, которые позволяют многократно выполнять некоторые действия, пока выполняется определённое условие. Обычно такие циклы используются для выполнения блоков кода до тех пор, пока не будет достигнут определённый критерий завершения.

### Обзор циклов с условием

Наиболее распространённые виды циклов с условием:

1. **Цикл `while`:** выполняет блок кода, пока заданное условие истинно.
2. **Цикл `do-while` (или `do...while`):** выполняет блок кода хотя бы один раз, а затем продолжает выполнение, пока условие истинно.

### Примеры использования циклов с условием

#### 1. Цикл `while`

**Синтаксис:**
```python
while условие:
    # блок кода, который будет выполняться, пока условие истинно
```

**Пример на Python:**
```python
counter = 0
while counter < 5:
    print("Счетчик:", counter)
    counter += 1  # Увеличиваем счетчик на 1
```

**Вывод:**
```
Счетчик: 0
Счетчик: 1
Счетчик: 2
Счетчик: 3
Счетчик: 4
```

В этом примере цикл `while` будет продолжаться, пока значение `counter` меньше 5. Каждый раз, когда блок кода выполняется, значение `counter` увеличивается на 1.

#### 2. Цикл `do...while`

**Синтаксис в некоторых языках (не поддерживается в Python; поддерживается в C, C++, Java и других):**
```cpp
do {
    // блок кода
} while (условие);
```

**Пример на C++:**
```cpp
#include <iostream>
using namespace std;

int main() {
    int counter = 0;
    
    do {
        cout << "Счетчик: " << counter << endl;
        counter++;
    } while (counter < 5);

    return 0;
}
```

**Вывод:**
```
Счетчик: 0
Счетчик: 1
Счетчик: 2
Счетчик: 3
Счетчик: 4
```

В этом примере цикл `do...while` выполнит блок кода хотя бы один раз, даже если условие не выполнено, пока `counter` меньше 5.

### 3. Использование циклов с условием

Циклы с условием могут использоваться в разнообразных ситуациях, например:

- Для обработки данных в списках или массивах.
- Для выполнения запросов к пользователю, пока не будут введены правильные данные.
- Для реализации алгоритмов, таких как обход графов или поиск.

### 4. Бесконечные циклы

Циклы с условием могут стать бесконечными, если условие никогда не становится ложным. Например:

```python
while True:
    print("Этот цикл бесконечен!")  # Бесконечный цикл
```

Чтобы избежать бесконечного цикла, необходимо обеспечить возможность выхода из него, например, с помощью оператора `break` или корректного изменения условий.

### Заключение

Циклы с условием — важная часть управления потоком выполнения программ. Они позволяют эффективно выполнять повторяющиеся операции, снижая избыточность кода. Понимание таких конструкций поможет вам в решении множества задач при программировании.